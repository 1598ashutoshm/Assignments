Repitition practice problem with for loop:

Q1.power of 2.
<<

#! /bin/bash

function power(){
                local num=$1
                 power=$(( 2 ** $num ))
                 echo $power
}

read -p "Enter Number: " num
powerresult="$( power $num )"
echo $powerresult

>>
Output:
$ bash power.sh
Enter Number: 4
16

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop/minibootcamp/shellscript/stage2/stage2for
$ bash power.sh
Enter Number: 2
4

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop/minibootcamp/shellscript/stage2/stage2for
$ bash power.sh
Enter Number: 3
8

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop/minibootcamp/shellscript/stage2/stage2for
$ bash power.sh
Enter Number: 5
32

**************************************************************************************************************************

Q2. Factorial Of a Number

<<
#! /bin/bash

function factorial(){
         local fact=1
         local num=$1
         for (( i=1; i<=$num; i++ ))
         do
             fact=$(( $fact * $i ))
         done
         echo $fact

}

read -p " Enter a number whoes factorial is to be taken: " num
result=$( factorial $num )

>>
Output:
$ bash factorialfunc.sh
 Enter a number whoes factorial is to be taken: 5
120

***************************************************************************************************************************

Q3. Prime Number

<<
  #! /bin/bash

function prime(){
                 local num=$1
                 for ((i=2 ; i<= $num/2 ; i++ ))
                 do
                    ans=$(( $num % $i ))
                    if [ $ans -eq 0 ]
                    then
                        echo "not a prime"
                        break
                    fi
                 done
                 echo "Prime"
}

read -p "Enter a number: " num
calcprime="$( prime $num )"
echo $calcprime

>>
Output:
$ bash primefunc.sh
Enter a number: 6
not a prime Prime
$ bash primefunc.sh
Enter a number: 5
Prime

***************************************************************************************************************************

Q4.Harmonic 

<<
#! /bin/bash
harmonic=1
n=8
for (( i=1; i<$n ; i++ ))
do
  harmonic=$(( $harmonic + 1/$i ))
  echo $harmonic

done
>>
Output:
2
2
2
2
2
2
2

***************************************************************************************************************************
Repitition Practice problem With While Loop:

Q1. Write a program that takes a command line argument n and prints a table of the power of two that are les than or
    equal to 2^n till 256 is reached.

<<

#! /bin/bash

num=8
i=0
powerOfTwo=1
while [ $i -lt $num ]
do
   echo "$i $powerOfTwo"
   powerOfTwo=$(( 2 * $powerOfTwo ))
   (( i++ ))
done

>>
Output:
$ bash poweroftwo.sh
0 1
1 2
2 4
3 8
4 16
5 32
6 64
7 128

***************************************************************************************************************************

Q2. Take a number from user and check the number is prime then show its palindrome 
<<
#! /bin/bash

function prime(){
                 local palindrome=$1
                 for ((i=2 ; i<= $palindrome/2 ; i++ ))
                 do
                    ans=$(( $palindrome % $i ))
                    if [ $ans -eq 0 ]
                    then
                        echo " Palindrome number is not a prime"
                        break
                    fi
                 done
                 echo " palindrome number is Prime"
}

num=121
s=0
rev=""
temp=$num
while [ $num -gt 0 ]
do
    s=$(( $num % 10 ))
    num=$(( $num / 10 ))
    rev=$( echo ${rev}${s} )
done
if [ $temp -eq $rev ];
then
    echo "Number is palindrome"
    palindrome=$rev
else
    echo "Number is NOT palindrome"
fi
calcprime="$( prime $palindrome )"
echo $calcprime

>>
Output:
$ bash primepalindrome.sh
Number is palindrome
Palindrome number is not a prime 

***********************************************************************************************************************************************************************
# Function Practice Problems:

Q. Check number is Palnidrome

<<
num=545
s=0
rev=""
temp=$num
while [ $num -gt 0 ]
do
    s=$(( $num % 10 ))
    num=$(( $num / 10 ))
    rev=$( echo ${rev}${s} )
done
if [ $temp -eq $rev ];
then
    echo "Number is palindrome"
else
    echo "Number is NOT palindrome"
fi

>>
Output:
$ bash palindrome.sh
Number is palindrome
$ bash palindrome.sh
Number is NOT palindrome

***************************************************************************************************************************

Q. Coin toss prin till head or tain wins 11 times
<<
#! /bin/bash

check=$(( RANDOM % 2 ))
Head=0
Tail=1
counthead=0
counttail=0
echo "$check"
for (( i=1 ; i<=11 ; i++ ))
do
  if [[ $check -eq $head ]]
  then
      echo 'Head'
      (( counthead= counthead + 1  ))
      if [ $counthead -gt 11 ]
      then
          echo "Wins"
      fi

  else
      echo 'Tail'
      (( counttail= counttail + 1 ))
      if [ $counttail -gt 11 ]
      then
          echo "lost"
      fi
fi
done

>>
Output:
$ bash updatedcointoss.sh
1
Tail
Tail
Tail
Tail
Tail
Tail
Tail
Tail
Tail
Tail
Tail

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop/test
$ bash updatedcointoss.sh
0
Head
Head
Head
Head
Head
Head
Head
Head
Head
Head
Head

************************************************************************************************************************************************************************
Ashutosh Mukhedkar

Q. Print last 4 Freq access urls count in sorted order from access.log

<<

#!/bin/bash

cat  /c/Users/mukhe/Desktop/minibootcamp/linux-content/access.log | awk '{ print $11 }' > url.txt

cat url.txt | grep "https://" > urls.txt                                              

echo " 4 unique urls: "

uniq -c urls.txt | tail -4

>>

Output :
 
 4 unique urls:
     11 "https://fundoopush-dev.bridgelabz.com/dashboard/article"
     14 "https://fundoopush-dev.bridgelabz.com/login"
      9 "https://fundoopush-dev.bridgelabz.com/dashboard/article"
      7 "https://fundoopush-dev.bridgelabz.com/login"

***************************************************************************

Q. Move files from resp folder to new folder

<<

#! /bin/bash

for file in $( ls *.txt )
do
   basename=$( echo $file | awk -F. '{ print $1 }')
   echo $file,$basename
   if [ -d $basename ]
   then
         rm -r $basename
   fi
   mkdir $basename
   cp $file $basename

done

>>

Output:

abc.txt,abc
efg.txt,efg
hij.txt,hij
lmo.txt,lmo
xyz.txt,xyz

**************************************************************************

Q. Print list of last 4 Freq access urls at a particular hours from access.log

<<

#! /bin/bash

cat  access.log | awk  '{ print $4,$11 }' > url.txt

cat url.txt | grep "https://" > urls.txt

echo " Timestamp & Url : "

cat urls.txt

echo " Print last four urls with timestamp : "

cat urls.txt | sort | uniq -c | tail -4

>>

Output :

 Print last four urls with timestamp :
      6 [30/Sep/2019:06:01:17 "https://fundoopush-dev.bridgelabz.com/dashboard/article"
      6 [30/Sep/2019:06:20:47 "https://fundoopush-dev.bridgelabz.com/dashboard/article"
      6 [30/Sep/2019:09:28:37 "https://fundoopush-dev.bridgelabz.com/dashboard/article"
      8 [01/Oct/2019:05:55:53 "https://fundoopush-dev.bridgelabz.com/dashboard/article"

****************************************************************************************

Q. Print list of web response code count in the unique sorted order at specific hours
 
<<

#! /bin/bash

cat access.log | awk '{ print $9 }' > webrespcode.txt

echo " printing web responce code "

cat webrespcode.txt

echo " Printing unique response code count: "

cat webrespcode.txt | sort | uniq -c

>>

Output :
 Printing unique response code count:
   3176 200
      8 206
     26 304

***********************************************************************************

Q. Print list of unique client ip address from access.log

<<
#! /bin/bash

 cat access.log | awk '{ print $1 }' > clientip.txt

 cat clientip.txt | sort | uniq -c | sort -nr | tail -4

>>

Output :
 168 10.56.5.2
     40 10.56.46.2
      9 10.56.34.4
      7 10.56.44.4

**************************************************************************************

Q. Check if folder exist or not, if not then create 

<<

#! /bin/bash

read -p " Enter a value: " val

if [ ! -d $val ]
then
      mkdir $val
else
      echo " already exist "
fi

>>
Output :
mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop/minibootcamp/temp
$ ls
abc/  createfolder.sh*  url.txt  urlcount.sh*  urlcount.txt  urls.txt

**********************************************************************************

Q. Execute command "hello" and "ls" and check its execution status

<<
mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ hello
bash: hello: command not found

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ echo $?
127

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ ls
'Assignment 1.txt'   VarahiTechSourceCode.txt   abc.txt   desktop.ini   erangle/   minibootcamp/   mnm.txt   multiple.py   nano.save   test/   test1/   test2/   ubuntu-1604.appx   vagan.txt

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ echo $?
0

>>

********************************************************************************************

Q. Create process list tables display pid , ppid , Cmdname, memory consumption of cpu utilization. 

<<

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop/minibootcamp/linux-content (master)
$ ps -elf
     UID     PID    PPID  TTY        STIME COMMAND
   mukhe    2019    2018 pty0     19:17:48 /usr/bin/bash
   mukhe    2018       1 ?        19:17:46 /usr/bin/mintty
   mukhe    2856    2019 pty0     22:36:57 /usr/bin/ps

>>

********************************************************************************************

Q. Data analysis / manipulation (awk)

1. Print Empname and total pay who has basepay greater than 10000. 
<<
cat data.csv | awk ' { if ( $4 > 10000 )  print $2 , $7 }'
>>
output:
EmployeeName TotalPay
NATHANIEL 567595
GARY 538909
ALBERT 335279
CHRISTOPHER 332343
PATRICK 326373
DAVID 316285
ALSON 315981
DAVID 307899
JOANNE 302377
PATRICIA 297608
EDWARD 294580

**************

2. What is the aggregate totalpay of employee whoes job title is CAPTAIN
<<
 cat data.csv | grep -i captain | awk '{ sum+=$7 } END { print sum/NR }'
>>
Output :
Aggregate is :390599

****************

3. Print Jobtitle and overtime pay who has overtimepay is between 7000 and 10000 
<<
 cat data.csv | awk '{ if ($5 > 7000 && $5 < 10000) print $3,$5 }'
>>
Output :

DEPUTYCHIEF 9737
ASSTDEPUTY 8601

****************

4. Print avgBasepay

<<
 cat data.csv | awk ' { sum+=$4 } END { print sum/NR } '
>>
Output :
Average of Basepay is: 157972

**************************************************************************************************************************

Q. Get user info from /etc/passwd and change ownership of user home directory :
1. view /etc/passwd file and print the 1st field from /etc/passwd file.
<<
cat /etc/passwd | awk -F: '{ print $1 }'
>>

Note: Cmd for adding user is not done in class, Changing the ownership of a directory or a file not done in class.
      Change in permission of a dir or file  not done.

**************************************************************************************************************************

Q.
<<
ashu@DESKTOP-RL8ITQ8:~$ cd /var
ashu@DESKTOP-RL8ITQ8:/var$ cd log
ashu@DESKTOP-RL8ITQ8:/var/log$ ls
alternatives.log  apt  btmp  dist-upgrade  dpkg.log  fsck  lastlog  lxd  unattended-upgrades  wtmp
ashu@DESKTOP-RL8ITQ8:/var/log$ find . -mtime 7
ashu@DESKTOP-RL8ITQ8:/var/log$
>>
Note: I tried to enter cd/var/log cmd inside gitbash but it is showing that no such file or dir.
      
***************************************************************************************************************************

Q. Find Diff betwn original and updated file. Apply changes to original file.

<<
Creating original dir:

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ mkdir original

Creating updated dir:

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ mkdir updated

Creating original-file.sh:
 
mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ nano original-file.sh

Copying originalfile to original folder: 

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ cp original-file.sh original


Creating updated-file.sh: 

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ nano updated-file.sh

Copying updatedfile.sh to updated Dir: 

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ cp updated-file.sh updated

Difference betwn original and updated Dir: 

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ diff original updated
Only in original: original-file.sh
Only in updated: updated-file.sh


mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ ls
'Assignment 1.txt'          abc.txt       erangle/        mnm.txt       nano.save   original-file.sh*   test1/   ubuntu-1604.appx   updated-file.sh*
 VarahiTechSourceCode.txt   desktop.ini   minibootcamp/   multiple.py   original/   test/               test2/   updated/           vagan.txt


Copying Original Dir to erangle: 

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ cp -r original erangle

Renaming erangle to original-backup :

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ mv erangle original-backup

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ ls
'Assignment 1.txt'          abc.txt       minibootcamp/   multiple.py   original/          original-file.sh*   test1/   ubuntu-1604.appx   updated-file.sh*
 VarahiTechSourceCode.txt   desktop.ini   mnm.txt         nano.save     original-backup/   test/               test2/   updated/           vagan.txt

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ nano original-file.sh

mukhe@DESKTOP-RL8ITQ8 MINGW64 ~/Desktop
$ diff original-backup updated
Only in original-backup: original
Only in updated: updated-file.sh
 
****************************************************************************************************************************************************************** 
